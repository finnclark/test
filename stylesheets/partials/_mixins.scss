
@mixin respond-at-and-above($width) {
  @media (min-width: $width) {
    @content;
  }
}
@mixin respond-at-and-below($width) {
  @media (max-width: $width) {
    @content;
  }
}

@mixin respond-at-and-above-height($height) {
  @media (min-height: $height) {
    @content;
  }
}

@mixin respond-at-and-below-height($height) {
  @media (max-height: $height) {
    @content;
  }
}

@mixin respond-above-width-and-above-height($width, $height) {
  @media (min-width: $width) and (max-height: $height) {
    @content;
  }
}


@mixin transition($transition: all .2s ease-in-out) {
  -webkit-transition: $transition;
  -moz-transition:    $transition;
  -o-transition:      $transition;
}

@mixin transition-snap($transition-snap: all .35s cubic-bezier(0.885, 0.045, 0.285, 1.030)) {
  -webkit-transition: all 300ms cubic-bezier(0.885, 0.045, 0.285, 1); /* older webkit */
  -webkit-transition: $transition-snap;
     -moz-transition: $transition-snap;
       -o-transition: $transition-snap;
          transition: $transition-snap; /* custom */
}

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
}

@mixin title-drop {
  -webkit-box-shadow: 0px 8px 20px -11px rgba(0, 0, 0, 0.20);
  -moz-box-shadow: 0px 8px 20px -11px rgba(0, 0, 0, 0.20);
  box-shadow: 0px 8px 20px -11px rgba(0, 0, 0, 0.20);
}

@mixin image-drop {
  -webkit-box-shadow: 0px 45px 150px -45px rgba(0,0,0,0.25);
  -moz-box-shadow: 0px 45px 150px -45px rgba(0,0,0,0.25);
  box-shadow: 0px 45px 150px -45px rgba(0,0,0,0.25);
}

@mixin lineargradient-vertical($color, $to) {
  background: $color;
  background: -webkit-linear-gradient(bottom, $color, $to);
  background: -o-linear-gradient(top, $color, $to);
  background: -moz-linear-gradient(top, $color, $to);
  background: linear-gradient(to top, $color, $to);
}

@mixin lineargradient-horizontal($color, $to) {
  background: $color;
  background: -webkit-linear-gradient(left, $color, $to);
  background: -o-linear-gradient(right, $color, $to);
  background: -moz-linear-gradient(right, $color, $to);
  background: linear-gradient(to right, $color, $to);
}

@mixin lineargradient-border($size, $color-one, $color-two, $start, $middle, $end) {
  // border-top: $size solid $from;
  border-bottom: $size solid $color-two;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  background-position: 0 0, 0 100% ;
  background-repeat: no-repeat;
  -webkit-background-size: 100% $size;
  -moz-background-size: 100% $size;
  background-size: 100% $size;
  background-image: -moz-linear-gradient(left, $color-two $start, $color-one $middle, $color-two $end);
  background-image: -webkit-gradient(left top, right top, color-stop($start, $color-two), color-stop($middle, $color-one), color-stop($end, $color-two));
  background-image: -webkit-linear-gradient(left, $color-two $start, $color-one $middle, $color-two $end);
  background-image: -o-linear-gradient(left, $color-two $start, $color-one $middle, $color-two $end);
  background-image: -ms-linear-gradient(left, $color-two $start, $color-one $middle, $color-two $end);
  background-image: linear-gradient(to right, $color-two $start, $color-one $middle, $color-two $end);
}

@mixin before-bullet($radius, $width, $height, $color) {
  &:before {
    @include transition;
    content: '';
    position: relative;
    display: inline-block;
    width: $width;
    height: $height;
    background-color: transparent;
    border-radius: $radius;
    margin-bottom: 3px;
    margin-left: -$width;
    margin-right: 0px;
  }
  &:hover {
    background-color: transparent;
    &:before {
      margin-right: 10px;
      background-color: $color;
    }
  }
}
